// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carrera {
  id          Int         @id @default(autoincrement())
  nombre      String
  estudiantes Estudiante[]
  materias    Materia[]
  profesores  Profesor[]
}

model Materia {
  id           Int           @id @default(autoincrement())
  nombre       String
  carreraId    Int
  carrera      Carrera       @relation(fields: [carreraId], references: [id])
  inscripciones Inscripcion[]
  dictados     Dicta[]
}

model Estudiante {
  id            Int           @id @default(autoincrement())
  nombre        String
  carreraId     Int
  carrera       Carrera       @relation(fields: [carreraId], references: [id])
  inscripciones Inscripcion[]
}

model Profesor {
  id         Int     @id @default(autoincrement())
  nombre     String
  carreraId  Int
  carrera    Carrera @relation(fields: [carreraId], references: [id])
  dictados   Dicta[]
}

// Modelo intermedio: estudiantes <-> materias
model Inscripcion {
  id           Int        @id @default(autoincrement())
  estudiante   Estudiante @relation(fields: [estudianteId], references: [id])
  estudianteId Int
  materia      Materia    @relation(fields: [materiaId], references: [id])
  materiaId    Int

  @@unique([estudianteId, materiaId])
}

// Modelo intermedio: profesores <-> materias
model Dicta {
  id         Int      @id @default(autoincrement())
  profesor   Profesor @relation(fields: [profesorId], references: [id])
  profesorId Int
  materia    Materia  @relation(fields: [materiaId], references: [id])
  materiaId  Int

  @@unique([profesorId, materiaId])
}
